#ifndef CLINGO_LANG_FUNC_H
#define CLINGO_LANG_FUNC_H

#include <assert.h>
#include <math.h>
#include <iso646.h>
#include <stdbool.h>
#include <stdint.h>
#include <string.h>

/*******************************************************************************
********************************************************************* Functions
********************************************************************************
 cmp
*******************************************************************************/

inline bool diff_c( int res )
{
   return res != 0;
}

inline bool eq_c( int res )
{
   return res == 0;
}

inline bool gt_c( int res )
{
   return res > 0;
}

inline bool gte_c( int res )
{
   return res >= 0;
}

inline bool lt_c( int res )
{
   return res < 0;
}

inline bool lte_c( int res )
{
   return res <= 0;
}

/*******************************************************************************
 concat
*******************************************************************************/

#define concat2_c_( A, B )                                                     \
   A ## B

#define concat3_c_( A, B, C )                                                  \
   A ## B ## C

#define xconcat2_c_( A, B )                                                    \
   concat2_c_( A, B )

#define xconcat3_c_( A, B, C )                                                 \
   concat3_c_( A, B, C )

/*******************************************************************************
 constraints
*******************************************************************************/

#define must_be_c_( Expression )                                               \
   assert( (Expression) )

#define must_exist_c_( Ptr )                                                   \
   assert( (Ptr) != NULL )

#define must_be_positive_c_( Value )                                           \
   assert( (Value) >= 0 )

#define must_be_in_range_c_( First, Value, Last )                              \
   assert( ( (Value) >= (First) ) and  ( (Value) <= (Last) ) )

/*******************************************************************************
 flags
*******************************************************************************/

#define has_c_( Config, Flags )                                                \
(                                                                              \
   (Config) & (Flags)                                                          \
)

#define set_c_( Config, Flags )                                                \
(                                                                              \
   (Config) | (Flags)                                                          \
)

#define unset_c_( Config, Flags )                                              \
(                                                                              \
   (Config) & ~(Flags)                                                         \
)

/*******************************************************************************
 loop
*******************************************************************************/

#define once_c_( Var )                                                         \
for ( int64_t (Var) = 0; (Var) < 1; ++(Var) )

#define times_c_( N, Var )                                                     \
for ( int64_t (Var) = 0; (Var) < (N); ++(Var) )

/*******************************************************************************
 num
*******************************************************************************/

#define in_range_c_( Min, Value, Max )                                         \
(                                                                              \
   ( ( (Value) >= (Min) ) and  ( (Value) <= (Max) ) )                          \
)

#define is_sign_c_( Value )                                                    \
(                                                                              \
   ( (Value) == '-' or (Value) == '+' )                                        \
)

#define sign_c_( Value )                                                       \
(                                                                              \
   (Value) < 0                                                                 \
      ? '-'                                                                    \
      : '+'                                                                    \
)

/*******************************************************************************
 stringify
*******************************************************************************/

#define stringify_c_( A ) #A

#define xstringify_c_( A ) stringify_c_( A )

/*******************************************************************************
 swap
*******************************************************************************/

#define swap_c_( Type, X, Y, Prefix )                                          \
{                                                                              \
   Type Prefix##temp = (X);                                                    \
   (X) = (Y);                                                                  \
   (Y) = Prefix##temp;                                                         \
}

/*******************************************************************************
  va_args
*******************************************************************************/

#define nargs_c_( ... )                                                        \
   nargs_helper_c_(                                                            \
   __VA_ARGS__,        255, 254, 253, 252, 251, 250,                           \
   249, 248, 247, 246, 245, 244, 243, 242, 241, 240,                           \
   239, 238, 237, 236, 235, 234, 233, 232, 231, 230,                           \
   229, 228, 227, 226, 225, 224, 223, 222, 221, 220,                           \
   219, 218, 217, 216, 215, 214, 213, 212, 211, 210,                           \
   209, 208, 207, 206, 205, 204, 203, 202, 201, 200,                           \
                                                                               \
   199, 198, 197, 196, 195, 194, 193, 192, 191, 190,                           \
   189, 188, 187, 186, 185, 184, 183, 182, 181, 180,                           \
   179, 178, 177, 176, 175, 174, 173, 172, 171, 170,                           \
   169, 168, 167, 166, 165, 164, 163, 162, 161, 160,                           \
   159, 158, 157, 156, 155, 154, 153, 152, 151, 150,                           \
   149, 148, 147, 146, 145, 144, 143, 142, 141, 140,                           \
   139, 138, 137, 136, 135, 134, 133, 132, 131, 130,                           \
   129, 128, 127, 126, 125, 124, 123, 122, 121, 120,                           \
   119, 118, 117, 116, 115, 114, 113, 112, 111, 110,                           \
   109, 108, 107, 106, 105, 104, 103, 102, 101, 100,                           \
                                                                               \
    99,  98,  97,  96,  95,  94,  93,  92,  91,  90,                           \
    89,  88,  87,  86,  85,  84,  83,  82,  81,  80,                           \
    79,  78,  77,  76,  75,  74,  73,  72,  71,  70,                           \
    69,  68,  67,  66,  65,  64,  63,  62,  61,  60,                           \
    59,  58,  57,  56,  55,  54,  53,  52,  51,  50,                           \
    49,  48,  47,  46,  45,  44,  43,  42,  41,  40,                           \
    39,  38,  37,  36,  35,  34,  33,  32,  31,  30,                           \
    29,  28,  27,  26,  25,  24,  23,  22,  21,  20,                           \
    19,  18,  17,  16,  15,  14,  13,  12,  11,  10,                           \
     9,   8,   7,   6,   5,   4,   3,   2,   1,   0                            \
)

#define nargs_helper_c_(                                                       \
   A000, A001, A002, A003, A004, A005, A006, A007, A008, A009,                 \
   A010, A011, A012, A013, A014, A015, A016, A017, A018, A019,                 \
   A020, A021, A022, A023, A024, A025, A026, A027, A028, A029,                 \
   A030, A031, A032, A033, A034, A035, A036, A037, A038, A039,                 \
   A040, A041, A042, A043, A044, A045, A046, A047, A048, A049,                 \
   A050, A051, A052, A053, A054, A055, A056, A057, A058, A059,                 \
   A060, A061, A062, A063, A064, A065, A066, A067, A068, A069,                 \
   A070, A071, A072, A073, A074, A075, A076, A077, A078, A079,                 \
   A080, A081, A082, A083, A084, A085, A086, A087, A088, A089,                 \
   A090, A091, A092, A093, A094, A095, A096, A097, A098, A099,                 \
                                                                               \
   A100, A101, A102, A103, A104, A105, A106, A107, A108, A109,                 \
   A110, A111, A112, A113, A114, A115, A116, A117, A118, A119,                 \
   A120, A121, A122, A123, A124, A125, A126, A127, A128, A129,                 \
   A130, A131, A132, A133, A134, A135, A136, A137, A138, A139,                 \
   A140, A141, A142, A143, A144, A145, A146, A147, A148, A149,                 \
   A150, A151, A152, A153, A154, A155, A156, A157, A158, A159,                 \
   A160, A161, A162, A163, A164, A165, A166, A167, A168, A169,                 \
   A170, A171, A172, A173, A174, A175, A176, A177, A178, A179,                 \
   A180, A181, A182, A183, A184, A185, A186, A187, A188, A189,                 \
   A190, A191, A192, A193, A194, A195, A196, A197, A198, A199,                 \
                                                                               \
   A200, A201, A202, A203, A204, A205, A206, A207, A208, A209,                 \
   A210, A211, A212, A213, A214, A215, A216, A217, A218, A219,                 \
   A220, A221, A222, A223, A224, A225, A226, A227, A228, A229,                 \
   A230, A231, A232, A233, A234, A235, A236, A237, A238, A239,                 \
   A240, A241, A242, A243, A244, A245, A246, A247, A248, A249,                 \
   A250, A251, A252, A253, A254, A255, ...                                     \
)                                                                              \
   A255

#endif
